In server.py

from flask import Flask, request
import os
import subprocess
import datetime

app = Flask(__name__)

OPT_IN_FILE = "/etc/dormant_opt_in.conf"
DEACTIVATED_LOG = "/etc/dormant_deactivated.log"

@app.route('/confirm')
def confirm():
    user = request.args.get('user')
    response = request.args.get('response')

    if not user or not response:
        return "❗ Invalid request."

    if response == "yes":
        now = datetime.datetime.now().strftime("%Y-%m-%d")
        with open(OPT_IN_FILE, "a") as f:
            f.write(f"{user}={now}\n")
        return f"✅ Your account will remain active. Thank you, {user}!"

    elif response == "no":
        # Deactivate the user account
        try:
            subprocess.run(['usermod', '-L', user], check=True)
            subprocess.run(['usermod', '-s', '/sbin/nologin', user], check=True)

            os.makedirs(os.path.dirname(DEACTIVATED_LOG), exist_ok=True)
            with open(DEACTIVATED_LOG, 'a') as f:
                timestamp = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")
                f.write(f"{timestamp} - {user} deactivated via email link.\n")

            return f"❌ Your account '{user}' has been deactivated as requested."
        except Exception as e:
            return f"⚠️ Failed to deactivate account '{user}': {e}"

    else:
        return "❗ Unknown response type."

@app.route('/')
def index():
    return "🛡️ Dormant Account Management Flask Server is running."

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8080)



In dormant.sh:

for user in $user_account; do
    # ADD THE PART BELOW
    if passwd -S "$user" 2>/dev/null | grep -q " L "; then
        continue
    fi
    -- rest of the script --
  
